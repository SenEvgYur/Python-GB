# r - чтение
# w - запись (перезапись)
# a - дозапись

# file_path = r'Семинары\file.txt'
# f = open(file_path, 'w')
# f.write('asd')
# f.close()

# file_path = r'Семинары\file.txt'
# with open(file_path, 'a') as f:
#     f.write('\nasd')


# 1. Задайте строку из набора чисел. Напишите программу, 
# которая покажет большее и меньшее число. 
# В качестве символа-разделителя используйте пробел.
# from posixpath import split

# file_path = r'Семинары\file.txt'
# with open(file_path, 'r') as f:
#     my_str = f.read()
# my_str = my_str.split()
# for i in range(len(my_str)):
#     my_str[i] = int(my_str[i])
# print(my_str)    
# print(min(my_str))
# print(max(my_str))

# 2. Найдите корни квадратного уравнения Ax² + Bx + C = 0 двумя способами: 
#     1) с помощью математических формул нахождения корней квадратного уравнения  
#     2) с помощью дополнительных библиотек Python
#  disc
# x1, x2

# path = 'file.txt'
# with open(path, 'r') as my_file:
#     data = my_file.read()

# data = data.split()
# print(data)
# data = data[:-2]
# print(data)
# data = [int(data[0][:-3]), int((data[1] + data[2])[:-1]), int(data[3] + data[4])]
# print(data)
# # D=b^2-4ac
# d = data[1]**2 - 4 * data[0] * data[2]
# print(d)
# # x=((-b+(d^(1/2)))/(2*a))
# x_1 = (-data[1] + d**0.5) / (2 * data[0])
# x_2 = (-data[1] - d**0.5) / (2 * data[0])
# print(x_1, x_2)

# data = open('ert.txt', 'w')

# data.writelines('\nLesson 5')

# a = int(input('Введите a: '))
# b = int(input('Введите b: '))
# c = int(input('Введите c: '))

# d = b**2-4*c*a
# x1 = (-b+d**0.5)/(2*a)
# x2 = (-b-d**0.5)/(2*a)

# data.writelines(f'\n {a}*x^2+{b}*x+{c}=0 \nx1 = {x1},    \nx2 = {x2}')
# data.close


# 3. Задайте два числа. Напишите программу, которая найдёт НОК
#  (наименьшее общее кратное) этих двух чисел.


# Домашнее задание:
# 1. Вычислить число c заданной точностью *d*
    
#     *Пример:* 
    
#     - при d = 0.001, π = 3.141
    
    
# 2. Задайте натуральное число N. Напишите программу, которая составит список простых множителей числа N.


# 3. Задайте последовательность чисел. Напишите программу, которая выведет список 
# неповторяющихся элементов исходной последовательности.


# 4. Задана натуральная степень k. Сформировать случайным образом список 
# коэффициентов (значения от 0 до 100) многочлена и записать в файл многочлен степени k.
    
#     *Пример:* 
    
#     - k=2 => 2*x² + 4*x + 5 = 0 или x² + 5 = 0 или 10*x² = 0


# 35. Даны два файла, в каждом из которых находится запись многочлена.
# Задача - сформировать файл, содержащий сумму многочленов.
